<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dk.webtrade</groupId>
    <artifactId>restDemo</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>

    <name>restDemo</name>

    <properties>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <profiles>
        <!--This profile makes it possible to run:  "mvn tomcat7:deploy -Pdeployremote" which deploy directly to production server:  mvn verify tomcat7:deploy -Pdeployremote (this will run the tests as well)-->
        <profile>
            <id>deployremote</id>
            <build>
                <plugins>
                    <plugin>  
                        <groupId>org.apache.tomcat.maven</groupId>  
                        <artifactId>tomcat7-maven-plugin</artifactId>  
                        <version>2.2</version>  
                        <configuration>
                            <url>https://www.bugelhartmann.dk/manager/text</url>  
                            <server>TomcatServer</server>
                            <path>/integrationtestdemo</path>
                            <username>admin</username>
                            <password>ppp</password>
                            <update>true</update>
                        </configuration>  
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--This profile is for deploying the application onto the local tomcat server via its manager module: url has /text at the end-->
        <profile>
            <id>deploylocal</id>
            <build>
                <plugins>
                    <plugin>  
                        <groupId>org.apache.tomcat.maven</groupId>  
                        <artifactId>tomcat7-maven-plugin</artifactId>  
                        <version>2.2</version>  
                        <configuration>
                            <url>http://localhost:8084/manager/text</url>  
                            <server>TomcatServer</server>
                            <path>/NameToDeployUnder</path>
                            <username>ide</username>
                            <password>M6hawMzS</password>
                            <update>true</update>
                        </configuration>  
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>test</id>
            <build>
                <plugins>
                    <!--plugin to run an embedded tomcat webserver on port 7777-->
                    <plugin>  
                        <groupId>org.apache.tomcat.maven</groupId>  
                        <artifactId>tomcat7-maven-plugin</artifactId>  
                        <version>2.2</version>  
                        <configuration>  
                            <path>/</path>
                            <port>7777</port>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-tomcat</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <fork>true</fork>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-tomcat</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>shutdown</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <!--the reporting section is for mvn site to create the javadoc site-->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <show>public</show>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <dependencies>
        <!-- https://mvnrepository.com/artifact/com.sun.jersey/jersey-bundle -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-bundle</artifactId>
            <version>1.19.4</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>2.5.2</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
            <version>2.5.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.1</version>
        </dependency>
        <!--connect to mysql with jdbc:-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.39</version>
        </dependency>
        <!--  Use this if you are using mysql 8-->
        <!--        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.15</version>
        </dependency>   -->
        
        <!-- in-memory database used for UnitTests -->
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.14.2.0</version>
            <scope>test</scope>
        </dependency>
       
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!--Testing rest api without the need for a running tomcat server. Jersey test framework (alternative to restassured)-->
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-jdk-http</artifactId>
            <version>2.22.1</version>
        </dependency>
        <!--Testing with restassured framework when tomcat is running-->
        <!-- https://mvnrepository.com/artifact/com.jayway.restassured/rest-assured -->
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>2.9.0</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--surefire plugin to run unit tests. escape the tests thats inside the integrationstests folder-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12.1</version>
                <configuration>
                    <excludes>
                        <exclude>**/integrationtests/*</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!--failsafe plugin to run test in the verify phase-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12.4</version>
                <configuration>
                    <includes>
                        <include>**/integrationtests/*</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--base plugin for maven to compile source files like: mvn compile-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArguments>
                        <endorseddirs>${endorsed.dir}</endorseddirs>
                    </compilerArguments>
                </configuration>
            </plugin>
            <!--base plugin to tell maven to package as a .war file instead of the default .jar file-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
            <!--this plugin enables maven to execute the project by pointing to a main class: mvn exec:java-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>entity.Tester</mainClass>
                </configuration>
            </plugin>
            <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
                
            <!--this was necessary in order to make 'mvn site' work properly-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <!--Denne plugin ved jeg ikke rigtig hvad er til??-->
<!--            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${endorsed.dir}</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax</groupId>
                                    <artifactId>javaee-endorsed-api</artifactId>
                                    <version>7.0</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
        </plugins>
    </build>

</project>
